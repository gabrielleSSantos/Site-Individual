let horario = [{"id":1,"horario":"08:00","dia":"01/06","status":"disponível"},{"id":2,"horario":"09:00","dia":"01/06","status":"disponível"},{"id":3,"horario":"10:00","dia":"01/06","status":"disponível"},{"id":4,"horario":"11:00","dia":"01/06","status":"disponível"},{"id":5,"horario":"12:00","dia":"01/06","status":"disponível"},{"id":6,"horario":"13:00","dia":"01/06","status":"disponível"}]

horario[0]
horario[0].id
1

horario[0].status

horario[0].status = "indisponível"
'indisponível'

      fetch("/usuarios/cadastrarAgendamento", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({
//         data_AgendamentoServer: data,
//         hora_AgendamentoServer: hora,
//         escolhaTrança_AgendamentoServer: escolha_tranca,
//         observaçao_Agendamento: observacao,
//         fkusario_Agendamento: usuario
//       }),
//     })
//       .then(function (resposta) {
//         console.log("resposta: ", resposta);

//         if (resposta.ok) {
//         alert ("Agendamento Marcado com sucesso");
//         } else {
//           throw "Houve um erro ao tentar realizar o agendamento!";
//         }
//       })
//       .catch(function (resposta) {
//         console.log(`#ERRO: ${resposta}`);
//       });
//   }




CREATE DATABASE GabiTrancas;
USE GabiTrancas;

-- TABELA USUARIO
CREATE TABLE usuario(
	idusuario INT PRIMARY KEY auto_increment,
    nome VARCHAR(45),
	email varchar(45),
    senha varchar(20),
    rua VARCHAR(45),
    numero INT,
    bairro VARCHAR(45),
    telefone CHAR(11)
);

-- TABELA HORARIO
 CREATE TABLE horario (
	idhorario int primary key auto_increment, 
   dia DATE,
   horarioAgendamento TIME
 );
 
 ALTER TABLE horario ADD COLUMN StatusHorario VARCHAR(12) constraint CNK_STATUS 
 CHECK (StatusHorario= 'Disponivel' or StatusHorario = 'Indisponivel');

-- TABELA AGENDAMENTOS
 CREATE TABLE Agendamentos(
	idagendamentos INT primary KEY auto_increment,
    observavao VARCHAR(45),
    TrancaEscolha VARCHAR(25),
    FKusuario int, foreign key (FKusuario) references usuario(idusuario)
 );
ALTER TABLE Agendamentos add column fkHorario INT, ADD foreign key(fkHorario) references Horario(idhorario);
 
	DESC AGENDAMENTOS;

-- simulando os dados 
 INSERT INTO usuario(idusuario, nome, email, senha) VALUES
 (NULL, 'gabrielle teste', 'gabrielle@gmail', 'gabi');
 
 select * from usuario;
 
 INSERT INTO Horario VALUES
 (NULL, '2022-06-01', '10:00', 'Disponivel'),
 (NULL ,'2022-06-01', '12:00',  'Disponivel'),
 (NULL ,'2022-06-01', '14:00',  'Disponivel'),
 (NULL ,'2022-06-02', '10:00',  'Disponivel'),
 (NULL ,'2022-06-02', '12:00',  'Disponivel'),
 (NULL ,'2022-06-02', '14:00',  'Disponivel');
 
 
 SELECT * FROM Horario;
 
 INSERT INTO Agendamentos VALUES
 (null, 'nada', 'Topo', 1 , 1);
 
 SELECT * FROM Agendamentos JOIN USUARIO on fkusuario=idusuario JOIN HORARIO ON FKHORARIO=IDHORARIO;


 // if (lista_horario[contador].dia_horario_fk == data) {
                //     if (lista_horario[contador].horario_horario_fk == hora) {
                //         if (lista_horario[contador].status_fk == "indisponivel") {
                //             alert("Horario Indisponivel")
                //         } else {
                //             alert("Horario Agendado")
 

    for (var contador = 0; contador < lista_horario.length; contador++) {
              if (lista_horario[contador].dia == data) {
                    if (lista_horario[contador].horario == hora) {
                        if (lista_horario[contador].status == "indisponivel") {
                            alert("Horario Indisponivel")
                        } else {
                            alert("Horario Agendado")
                            status[contador] == "indisponivel"
 
            }
